#pragma checksum "C:\Users\Iggy\Documents\embi\desktop-uwp\Multiporter\MultiporterC\Explorer.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "70927137AAFAA06BF23DA5189C6E7FB7"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiporterC
{
    partial class Explorer : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_FrameworkElement_Tag(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_DataContext(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DataContext = value;
            }
            public static void Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_Chart_Title(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Title = value;
            }
            public static void Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_DataPointSeries_ItemsSource(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Media_Imaging_BitmapImage_UriSource(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, global::System.Uri value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Uri) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Uri), targetNullValue);
                }
                obj.UriSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Foreground(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_PlaceholderText(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PlaceholderText = value ?? global::System.String.Empty;
            }
        };

        private class Explorer_obj1_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IExplorer_Bindings
        {
            private global::MultiporterC.MaterialNode dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBox obj2;
            private global::Windows.UI.Xaml.Controls.Image obj3;
            private global::Windows.UI.Xaml.Controls.TextBox obj5;
            private global::Windows.UI.Xaml.Controls.TextBox obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.Button obj8;
            private global::Windows.UI.Xaml.Controls.Button obj9;

            private Explorer_obj1_BindingsTracking bindingsTracking;

            public Explorer_obj1_Bindings()
            {
                this.bindingsTracking = new Explorer_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2:
                        this.obj2 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj2).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.MaterialDescription = (this.obj2).Text;
                                }
                            };
                        break;
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj5).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.MaterialName = (this.obj5).Text;
                                }
                            };
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj6).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.QuantityString = (this.obj6).Text;
                                }
                            };
                        break;
                    case 7:
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::MultiporterC.MaterialNode data = args.NewValue as global::MultiporterC.MaterialNode;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::MultiporterC.MaterialNode was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::MultiporterC.MaterialNode);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Border)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::MultiporterC.MaterialNode) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Explorer_obj1_Bindings

            public void SetDataRoot(global::MultiporterC.MaterialNode newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MultiporterC.MaterialNode obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_MaterialDescription(obj.MaterialDescription, phase);
                        this.Update_B(obj.B, phase);
                        this.Update_MaterialName(obj.MaterialName, phase);
                        this.Update_QuantityString(obj.QuantityString, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                        this.Update_Description(obj.Description, phase);
                    }
                }
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj9, obj, null);
                }
            }
            private void Update_MaterialDescription(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj2, obj, null);
                }
            }
            private void Update_B(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj3, obj, null);
                }
            }
            private void Update_MaterialName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                }
            }
            private void Update_QuantityString(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj6, obj, null);
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj8, obj, null);
                }
            }

            private class Explorer_obj1_BindingsTracking
            {
                global::System.WeakReference<Explorer_obj1_Bindings> WeakRefToBindingObj; 

                public Explorer_obj1_BindingsTracking(Explorer_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Explorer_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Explorer_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MultiporterC.MaterialNode obj = sender as global::MultiporterC.MaterialNode;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_MaterialDescription(obj.MaterialDescription, DATA_CHANGED);
                                    bindings.Update_B(obj.B, DATA_CHANGED);
                                    bindings.Update_MaterialName(obj.MaterialName, DATA_CHANGED);
                                    bindings.Update_QuantityString(obj.QuantityString, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "MaterialDescription":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MaterialDescription(obj.MaterialDescription, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "B":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_B(obj.B, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MaterialName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MaterialName(obj.MaterialName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "QuantityString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_QuantityString(obj.QuantityString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::MultiporterC.MaterialNode obj)
                {
                    Explorer_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class Explorer_obj10_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IExplorer_Bindings
        {
            private global::MultiporterC.DataChartNode dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart obj12;
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnSeries obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.TextBlock obj15;
            private global::Windows.UI.Xaml.Controls.Button obj16;

            private Explorer_obj10_BindingsTracking bindingsTracking;

            public Explorer_obj10_Bindings()
            {
                this.bindingsTracking = new Explorer_obj10_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12:
                        this.obj12 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)target;
                        break;
                    case 13:
                        this.obj13 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnSeries)target;
                        break;
                    case 14:
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15:
                        this.obj15 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 16:
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::MultiporterC.DataChartNode data = args.NewValue as global::MultiporterC.DataChartNode;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::MultiporterC.DataChartNode was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::MultiporterC.DataChartNode);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Border)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::MultiporterC.DataChartNode) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Explorer_obj10_Bindings

            public void SetDataRoot(global::MultiporterC.DataChartNode newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MultiporterC.DataChartNode obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_X_Axis_Name(obj.X_Axis_Name, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Data(obj.Data, phase);
                        this.Update_Y_Axis_Name(obj.Y_Axis_Name, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj12, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj13, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj16, obj, null);
                }
            }
            private void Update_X_Axis_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_Chart_Title(this.obj12, obj, null);
                }
            }
            private void Update_Data(global::System.Collections.Generic.List<global::MultiporterC.DataPoint> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_DataPointSeries_ItemsSource(this.obj13, obj, null);
                }
            }
            private void Update_Y_Axis_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj15, obj, null);
                }
            }

            private class Explorer_obj10_BindingsTracking
            {
                global::System.WeakReference<Explorer_obj10_Bindings> WeakRefToBindingObj; 

                public Explorer_obj10_BindingsTracking(Explorer_obj10_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Explorer_obj10_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Explorer_obj10_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MultiporterC.DataChartNode obj = sender as global::MultiporterC.DataChartNode;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_X_Axis_Name(obj.X_Axis_Name, DATA_CHANGED);
                                    bindings.Update_Data(obj.Data, DATA_CHANGED);
                                    bindings.Update_Y_Axis_Name(obj.Y_Axis_Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "X_Axis_Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_X_Axis_Name(obj.X_Axis_Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Data":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Data(obj.Data, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Y_Axis_Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Y_Axis_Name(obj.Y_Axis_Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::MultiporterC.DataChartNode obj)
                {
                    Explorer_obj10_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class Explorer_obj17_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IExplorer_Bindings
        {
            private global::MultiporterC.DataChartNode dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart obj19;
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ScatterSeries obj20;
            private global::Windows.UI.Xaml.Controls.TextBlock obj21;
            private global::Windows.UI.Xaml.Controls.TextBlock obj22;
            private global::Windows.UI.Xaml.Controls.Button obj23;

            private Explorer_obj17_BindingsTracking bindingsTracking;

            public Explorer_obj17_Bindings()
            {
                this.bindingsTracking = new Explorer_obj17_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 18:
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 19:
                        this.obj19 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)target;
                        break;
                    case 20:
                        this.obj20 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ScatterSeries)target;
                        break;
                    case 21:
                        this.obj21 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 22:
                        this.obj22 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 23:
                        this.obj23 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::MultiporterC.DataChartNode data = args.NewValue as global::MultiporterC.DataChartNode;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::MultiporterC.DataChartNode was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::MultiporterC.DataChartNode);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Border)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::MultiporterC.DataChartNode) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Explorer_obj17_Bindings

            public void SetDataRoot(global::MultiporterC.DataChartNode newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MultiporterC.DataChartNode obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_X_Axis_Name(obj.X_Axis_Name, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Data(obj.Data, phase);
                        this.Update_Y_Axis_Name(obj.Y_Axis_Name, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj19, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj20, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj23, obj, null);
                }
            }
            private void Update_X_Axis_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_Chart_Title(this.obj19, obj, null);
                }
            }
            private void Update_Data(global::System.Collections.Generic.List<global::MultiporterC.DataPoint> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_DataPointSeries_ItemsSource(this.obj20, obj, null);
                }
            }
            private void Update_Y_Axis_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj21, obj, null);
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj22, obj, null);
                }
            }

            private class Explorer_obj17_BindingsTracking
            {
                global::System.WeakReference<Explorer_obj17_Bindings> WeakRefToBindingObj; 

                public Explorer_obj17_BindingsTracking(Explorer_obj17_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Explorer_obj17_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Explorer_obj17_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MultiporterC.DataChartNode obj = sender as global::MultiporterC.DataChartNode;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_X_Axis_Name(obj.X_Axis_Name, DATA_CHANGED);
                                    bindings.Update_Data(obj.Data, DATA_CHANGED);
                                    bindings.Update_Y_Axis_Name(obj.Y_Axis_Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "X_Axis_Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_X_Axis_Name(obj.X_Axis_Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Data":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Data(obj.Data, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Y_Axis_Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Y_Axis_Name(obj.Y_Axis_Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::MultiporterC.DataChartNode obj)
                {
                    Explorer_obj17_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class Explorer_obj24_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IExplorer_Bindings
        {
            private global::MultiporterC.DataChartNode dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj25;
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart obj26;
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj28;
            private global::Windows.UI.Xaml.Controls.TextBlock obj29;
            private global::Windows.UI.Xaml.Controls.Button obj30;

            private Explorer_obj24_BindingsTracking bindingsTracking;

            public Explorer_obj24_Bindings()
            {
                this.bindingsTracking = new Explorer_obj24_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 25:
                        this.obj25 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 26:
                        this.obj26 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)target;
                        break;
                    case 27:
                        this.obj27 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)target;
                        break;
                    case 28:
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 29:
                        this.obj29 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 30:
                        this.obj30 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::MultiporterC.DataChartNode data = args.NewValue as global::MultiporterC.DataChartNode;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::MultiporterC.DataChartNode was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::MultiporterC.DataChartNode);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Border)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::MultiporterC.DataChartNode) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Explorer_obj24_Bindings

            public void SetDataRoot(global::MultiporterC.DataChartNode newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MultiporterC.DataChartNode obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_X_Axis_Name(obj.X_Axis_Name, phase);
                        this.Update_Title(obj.Title, phase);
                        this.Update_Data(obj.Data, phase);
                        this.Update_Y_Axis_Name(obj.Y_Axis_Name, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext(this.obj26, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj30, obj, null);
                }
            }
            private void Update_X_Axis_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj25, obj, null);
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_Chart_Title(this.obj26, obj, null);
                }
            }
            private void Update_Data(global::System.Collections.Generic.List<global::MultiporterC.DataPoint> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_DataPointSeries_ItemsSource(this.obj27, obj, null);
                }
            }
            private void Update_Y_Axis_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj28, obj, null);
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj29, obj, null);
                }
            }

            private class Explorer_obj24_BindingsTracking
            {
                global::System.WeakReference<Explorer_obj24_Bindings> WeakRefToBindingObj; 

                public Explorer_obj24_BindingsTracking(Explorer_obj24_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Explorer_obj24_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Explorer_obj24_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MultiporterC.DataChartNode obj = sender as global::MultiporterC.DataChartNode;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_X_Axis_Name(obj.X_Axis_Name, DATA_CHANGED);
                                    bindings.Update_Title(obj.Title, DATA_CHANGED);
                                    bindings.Update_Data(obj.Data, DATA_CHANGED);
                                    bindings.Update_Y_Axis_Name(obj.Y_Axis_Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "X_Axis_Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_X_Axis_Name(obj.X_Axis_Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Data":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Data(obj.Data, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Y_Axis_Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Y_Axis_Name(obj.Y_Axis_Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::MultiporterC.DataChartNode obj)
                {
                    Explorer_obj24_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class Explorer_obj31_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IExplorer_Bindings
        {
            private global::MultiporterC.QuantitativeRelationshipNode dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj32;
            private global::Windows.UI.Xaml.Controls.Image obj33;
            private global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj34;
            private global::Windows.UI.Xaml.Controls.Button obj35;
            private global::Windows.UI.Xaml.Controls.TextBlock obj36;
            private global::Windows.UI.Xaml.Controls.TextBlock obj37;
            private global::Windows.UI.Xaml.Controls.Button obj41;

            private Explorer_obj31_BindingsTracking bindingsTracking;

            public Explorer_obj31_Bindings()
            {
                this.bindingsTracking = new Explorer_obj31_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 32:
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 33:
                        this.obj33 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 34:
                        this.obj34 = (global::Windows.UI.Xaml.Media.Imaging.BitmapImage)target;
                        break;
                    case 35:
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 36:
                        this.obj36 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 37:
                        this.obj37 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 41:
                        this.obj41 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::MultiporterC.QuantitativeRelationshipNode data = args.NewValue as global::MultiporterC.QuantitativeRelationshipNode;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::MultiporterC.QuantitativeRelationshipNode was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::MultiporterC.QuantitativeRelationshipNode);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Border)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::MultiporterC.QuantitativeRelationshipNode) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Explorer_obj31_Bindings

            public void SetDataRoot(global::MultiporterC.QuantitativeRelationshipNode newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MultiporterC.QuantitativeRelationshipNode obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Definition(obj.Definition, phase);
                        this.Update_DefinitionVisibility(obj.DefinitionVisibility, phase);
                        this.Update_ImageVisible(obj.ImageVisible, phase);
                        this.Update_Rep(obj.Rep, phase);
                        this.Update_SubtypeEnabled(obj.SubtypeEnabled, phase);
                        this.Update_SubtypeString(obj.SubtypeString, phase);
                        this.Update_TypeString(obj.TypeString, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Description(obj.Description, phase);
                    }
                }
            }
            private void Update_Definition(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj32, obj, null);
                }
            }
            private void Update_DefinitionVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj32, obj);
                }
            }
            private void Update_ImageVisible(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj33, obj);
                }
            }
            private void Update_Rep(global::System.Uri obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_Imaging_BitmapImage_UriSource(this.obj34, obj, null);
                }
            }
            private void Update_SubtypeEnabled(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj35, obj);
                }
            }
            private void Update_SubtypeString(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj36, obj, null);
                }
            }
            private void Update_TypeString(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj37, obj, null);
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj41, obj, null);
                }
            }

            private class Explorer_obj31_BindingsTracking
            {
                global::System.WeakReference<Explorer_obj31_Bindings> WeakRefToBindingObj; 

                public Explorer_obj31_BindingsTracking(Explorer_obj31_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Explorer_obj31_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Explorer_obj31_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MultiporterC.QuantitativeRelationshipNode obj = sender as global::MultiporterC.QuantitativeRelationshipNode;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_Definition(obj.Definition, DATA_CHANGED);
                                    bindings.Update_DefinitionVisibility(obj.DefinitionVisibility, DATA_CHANGED);
                                    bindings.Update_ImageVisible(obj.ImageVisible, DATA_CHANGED);
                                    bindings.Update_Rep(obj.Rep, DATA_CHANGED);
                                    bindings.Update_SubtypeEnabled(obj.SubtypeEnabled, DATA_CHANGED);
                                    bindings.Update_SubtypeString(obj.SubtypeString, DATA_CHANGED);
                                    bindings.Update_TypeString(obj.TypeString, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Definition":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Definition(obj.Definition, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DefinitionVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DefinitionVisibility(obj.DefinitionVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ImageVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ImageVisible(obj.ImageVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Rep":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Rep(obj.Rep, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SubtypeEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SubtypeEnabled(obj.SubtypeEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SubtypeString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SubtypeString(obj.SubtypeString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TypeString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TypeString(obj.TypeString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::MultiporterC.QuantitativeRelationshipNode obj)
                {
                    Explorer_obj31_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class Explorer_obj43_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IExplorer_Bindings
        {
            private global::MultiporterC.VariableNode dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Button obj44;
            private global::Windows.UI.Xaml.Controls.Button obj45;
            private global::Windows.UI.Xaml.Controls.TextBlock obj46;

            private Explorer_obj43_BindingsTracking bindingsTracking;

            public Explorer_obj43_Bindings()
            {
                this.bindingsTracking = new Explorer_obj43_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 44:
                        this.obj44 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 45:
                        this.obj45 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 46:
                        this.obj46 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::MultiporterC.VariableNode data = args.NewValue as global::MultiporterC.VariableNode;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::MultiporterC.VariableNode was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::MultiporterC.VariableNode);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Border)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::MultiporterC.VariableNode) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Explorer_obj43_Bindings

            public void SetDataRoot(global::MultiporterC.VariableNode newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MultiporterC.VariableNode obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_UF(obj.UF, phase);
                        this.Update_Unit_Exists(obj.Unit_Exists, phase);
                        this.Update_MF(obj.MF, phase);
                        this.Update_Measurement_Name(obj.Measurement_Name, phase);
                    }
                }
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj44, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj45, obj, null);
                }
            }
            private void Update_UF(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj44, obj, null);
                }
            }
            private void Update_Unit_Exists(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj44, obj);
                }
            }
            private void Update_MF(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj45, obj, null);
                }
            }
            private void Update_Measurement_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj46, obj, null);
                }
            }

            private class Explorer_obj43_BindingsTracking
            {
                global::System.WeakReference<Explorer_obj43_Bindings> WeakRefToBindingObj; 

                public Explorer_obj43_BindingsTracking(Explorer_obj43_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Explorer_obj43_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Explorer_obj43_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MultiporterC.VariableNode obj = sender as global::MultiporterC.VariableNode;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_UF(obj.UF, DATA_CHANGED);
                                    bindings.Update_Unit_Exists(obj.Unit_Exists, DATA_CHANGED);
                                    bindings.Update_MF(obj.MF, DATA_CHANGED);
                                    bindings.Update_Measurement_Name(obj.Measurement_Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "UF":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_UF(obj.UF, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Unit_Exists":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Unit_Exists(obj.Unit_Exists, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MF":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MF(obj.MF, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Measurement_Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Measurement_Name(obj.Measurement_Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::MultiporterC.VariableNode obj)
                {
                    Explorer_obj43_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class Explorer_obj49_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IExplorer_Bindings
        {
            private global::MultiporterC.ExperimentNode dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBox obj50;
            private global::Windows.UI.Xaml.Controls.TextBlock obj51;
            private global::Windows.UI.Xaml.Controls.Button obj52;
            private global::Windows.UI.Xaml.Controls.Button obj53;

            private Explorer_obj49_BindingsTracking bindingsTracking;

            public Explorer_obj49_Bindings()
            {
                this.bindingsTracking = new Explorer_obj49_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 50:
                        this.obj50 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj50).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.Content = (this.obj50).Text;
                                }
                            };
                        break;
                    case 51:
                        this.obj51 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 52:
                        this.obj52 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 53:
                        this.obj53 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::MultiporterC.ExperimentNode data = args.NewValue as global::MultiporterC.ExperimentNode;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::MultiporterC.ExperimentNode was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::MultiporterC.ExperimentNode);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Border)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::MultiporterC.ExperimentNode) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Explorer_obj49_Bindings

            public void SetDataRoot(global::MultiporterC.ExperimentNode newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MultiporterC.ExperimentNode obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Content(obj.Content, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                        this.Update_Description(obj.Description, phase);
                    }
                }
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj53, obj, null);
                }
            }
            private void Update_Content(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj50, obj, null);
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_PlaceholderText(this.obj50, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj51, obj, null);
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj52, obj, null);
                }
            }

            private class Explorer_obj49_BindingsTracking
            {
                global::System.WeakReference<Explorer_obj49_Bindings> WeakRefToBindingObj; 

                public Explorer_obj49_BindingsTracking(Explorer_obj49_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Explorer_obj49_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Explorer_obj49_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MultiporterC.ExperimentNode obj = sender as global::MultiporterC.ExperimentNode;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_Content(obj.Content, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Content":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Content(obj.Content, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::MultiporterC.ExperimentNode obj)
                {
                    Explorer_obj49_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    global::Windows.UI.Xaml.Controls.TextBox element2 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    #line 453 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.TextBox)element2).LostFocus += this.Save_Card_Click;
                    #line default
                }
                break;
            case 4:
                {
                    global::Windows.UI.Xaml.Controls.Button element4 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 465 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element4).Click += this.Material_Image_Click;
                    #line default
                }
                break;
            case 5:
                {
                    global::Windows.UI.Xaml.Controls.TextBox element5 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    #line 433 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.TextBox)element5).LostFocus += this.Save_Card_Click;
                    #line default
                }
                break;
            case 6:
                {
                    global::Windows.UI.Xaml.Controls.TextBox element6 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    #line 442 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.TextBox)element6).LostFocus += this.Save_Card_Click;
                    #line 448 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.TextBox)element6).TextChanged += this.TextBox_TextChanged;
                    #line default
                }
                break;
            case 8:
                {
                    global::Windows.UI.Xaml.Controls.Button element8 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 419 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element8).Click += this.Description_Click;
                    #line default
                }
                break;
            case 9:
                {
                    global::Windows.UI.Xaml.Controls.Button element9 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 425 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element9).Click += this.Delete_Card_Click;
                    #line default
                }
                break;
            case 16:
                {
                    global::Windows.UI.Xaml.Controls.Button element16 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 370 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element16).Click += this.Delete_Card_Click;
                    #line default
                }
                break;
            case 23:
                {
                    global::Windows.UI.Xaml.Controls.Button element23 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 316 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element23).Click += this.Delete_Card_Click;
                    #line default
                }
                break;
            case 30:
                {
                    global::Windows.UI.Xaml.Controls.Button element30 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 262 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element30).Click += this.Delete_Card_Click;
                    #line default
                }
                break;
            case 35:
                {
                    global::Windows.UI.Xaml.Controls.Button element35 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 206 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element35).Click += this.Choose_Subtype;
                    #line default
                }
                break;
            case 38:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element38 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 183 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element38).Click += this.Quant_Type_Click;
                    #line default
                }
                break;
            case 39:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element39 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 187 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element39).Click += this.Quant_Type_Click;
                    #line default
                }
                break;
            case 40:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element40 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 191 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element40).Click += this.Quant_Type_Click;
                    #line default
                }
                break;
            case 41:
                {
                    global::Windows.UI.Xaml.Controls.Button element41 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 150 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element41).Click += this.Description_Click;
                    #line default
                }
                break;
            case 42:
                {
                    global::Windows.UI.Xaml.Controls.Button element42 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 156 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element42).Click += this.Delete_Card_Click;
                    #line default
                }
                break;
            case 44:
                {
                    global::Windows.UI.Xaml.Controls.Button element44 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 118 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element44).Click += this.Choose_Unit;
                    #line default
                }
                break;
            case 45:
                {
                    global::Windows.UI.Xaml.Controls.Button element45 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 96 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element45).Click += this.Choose_Measurement;
                    #line default
                }
                break;
            case 47:
                {
                    global::Windows.UI.Xaml.Controls.Button element47 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 71 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element47).Click += this.Description_Click;
                    #line default
                }
                break;
            case 48:
                {
                    global::Windows.UI.Xaml.Controls.Button element48 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 77 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element48).Click += this.Delete_Card_Click;
                    #line default
                }
                break;
            case 50:
                {
                    global::Windows.UI.Xaml.Controls.TextBox element50 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    #line 44 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.TextBox)element50).LostFocus += this.Save_Card_Click;
                    #line default
                }
                break;
            case 52:
                {
                    global::Windows.UI.Xaml.Controls.Button element52 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 31 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element52).Click += this.Description_Click;
                    #line default
                }
                break;
            case 53:
                {
                    global::Windows.UI.Xaml.Controls.Button element53 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 37 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element53).Click += this.Delete_Card_Click;
                    #line default
                }
                break;
            case 54:
                {
                    this.MySplitView = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 55:
                {
                    this.NavPanel = (global::MultiporterC.NavControl)(target);
                }
                break;
            case 56:
                {
                    this.RootPivot = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                }
                break;
            case 57:
                {
                    this.ConclusionsCards = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 58:
                {
                    global::Windows.UI.Xaml.Controls.Button element58 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 674 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element58).Click += this.New_Card_Click;
                    #line default
                }
                break;
            case 59:
                {
                    this.DataAnalysisCards = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 60:
                {
                    global::Windows.UI.Xaml.Controls.Button element60 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 655 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element60).Click += this.New_Card_Click;
                    #line default
                }
                break;
            case 61:
                {
                    this.ExperimentCards = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 62:
                {
                    global::Windows.UI.Xaml.Controls.Button element62 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 635 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element62).Click += this.New_Card_Click;
                    #line default
                }
                break;
            case 63:
                {
                    this.MaterialsCards = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 64:
                {
                    global::Windows.UI.Xaml.Controls.Button element64 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 616 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element64).Click += this.New_Card_Click;
                    #line default
                }
                break;
            case 65:
                {
                    this.HypothesisCards = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 66:
                {
                    global::Windows.UI.Xaml.Controls.Button element66 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 596 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element66).Click += this.New_Card_Click;
                    #line default
                }
                break;
            case 67:
                {
                    this.ProblemCards = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 68:
                {
                    global::Windows.UI.Xaml.Controls.Button element68 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 577 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element68).Click += this.New_Card_Click;
                    #line default
                }
                break;
            case 69:
                {
                    this.Export = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 527 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.Export).Click += this.Export_Click;
                    #line default
                }
                break;
            case 70:
                {
                    global::Windows.UI.Xaml.Controls.Button element70 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 536 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element70).Click += this.Experiment_Settings_Click;
                    #line default
                }
                break;
            case 71:
                {
                    global::Windows.UI.Xaml.Controls.Button element71 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 545 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element71).Click += this.GetConnectedDevices;
                    #line default
                }
                break;
            case 72:
                {
                    this.PlayExperimentButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 555 "..\..\..\Explorer.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.PlayExperimentButton).Click += this.Play_Click;
                    #line default
                }
                break;
            case 73:
                {
                    this.ExpName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 74:
                {
                    this.ExperimentAuthor = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 75:
                {
                    this.ExperimentCreated = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Border element1 = (global::Windows.UI.Xaml.Controls.Border)target;
                    Explorer_obj1_Bindings bindings = new Explorer_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::MultiporterC.MaterialNode) element1.DataContext);
                    element1.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element1, bindings);
                }
                break;
            case 10:
                {
                    global::Windows.UI.Xaml.Controls.Border element10 = (global::Windows.UI.Xaml.Controls.Border)target;
                    Explorer_obj10_Bindings bindings = new Explorer_obj10_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::MultiporterC.DataChartNode) element10.DataContext);
                    element10.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element10, bindings);
                }
                break;
            case 17:
                {
                    global::Windows.UI.Xaml.Controls.Border element17 = (global::Windows.UI.Xaml.Controls.Border)target;
                    Explorer_obj17_Bindings bindings = new Explorer_obj17_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::MultiporterC.DataChartNode) element17.DataContext);
                    element17.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element17, bindings);
                }
                break;
            case 24:
                {
                    global::Windows.UI.Xaml.Controls.Border element24 = (global::Windows.UI.Xaml.Controls.Border)target;
                    Explorer_obj24_Bindings bindings = new Explorer_obj24_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::MultiporterC.DataChartNode) element24.DataContext);
                    element24.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element24, bindings);
                }
                break;
            case 31:
                {
                    global::Windows.UI.Xaml.Controls.Border element31 = (global::Windows.UI.Xaml.Controls.Border)target;
                    Explorer_obj31_Bindings bindings = new Explorer_obj31_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::MultiporterC.QuantitativeRelationshipNode) element31.DataContext);
                    element31.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element31, bindings);
                }
                break;
            case 43:
                {
                    global::Windows.UI.Xaml.Controls.Border element43 = (global::Windows.UI.Xaml.Controls.Border)target;
                    Explorer_obj43_Bindings bindings = new Explorer_obj43_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::MultiporterC.VariableNode) element43.DataContext);
                    element43.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element43, bindings);
                }
                break;
            case 49:
                {
                    global::Windows.UI.Xaml.Controls.Border element49 = (global::Windows.UI.Xaml.Controls.Border)target;
                    Explorer_obj49_Bindings bindings = new Explorer_obj49_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::MultiporterC.ExperimentNode) element49.DataContext);
                    element49.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element49, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

